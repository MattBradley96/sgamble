{"ast":null,"code":"import _toConsumableArray from\"/home/mb4718/Desktop/sgamble/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{DateTime,Interval}from\"luxon\";import{useMemo}from\"react\";import CopyToClipboard from\"react-copy-to-clipboard\";import{useTranslation}from\"react-i18next\";import{toast}from\"react-toastify\";import{computeProximityPercent,generateSquareCharacters,getDirectionEmoji}from\"../domain/geography\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var START_DATE=DateTime.fromISO(\"2022-02-22\");export function Share(_ref){var guesses=_ref.guesses,dayString=_ref.dayString,settingsData=_ref.settingsData,hideImageMode=_ref.hideImageMode,rotationMode=_ref.rotationMode;var _useTranslation=useTranslation(),t=_useTranslation.t;var theme=settingsData.theme;var shareText=useMemo(function(){var _guesses;var win=((_guesses=guesses[guesses.length-1])===null||_guesses===void 0?void 0:_guesses.distance)===0;var bestDistance=Math.min.apply(Math,_toConsumableArray(guesses.map(function(_ref2){var distance=_ref2.distance;return distance;})));var guessCount=win?guesses.length:\"X\";var dayCount=Math.floor(Interval.fromDateTimes(START_DATE,DateTime.fromISO(dayString)).length(\"day\"));var difficultyModifierEmoji=hideImageMode?\" ðŸ™ˆ\":rotationMode?\" ðŸŒ€\":\"\";var bestPercent=\"(\".concat(computeProximityPercent(bestDistance).toString(),\"%)\");var title=\"Sgamble \".concat(dayCount,\" \").concat(guessCount,\"/6 \").concat(bestPercent).concat(difficultyModifierEmoji);var guessString=guesses.map(function(guess){var percent=computeProximityPercent(guess.distance);var squares=generateSquareCharacters(percent,theme).join(\"\");var direction=getDirectionEmoji(guess);return\"\".concat(squares).concat(direction);}).join(\"\\n\");return[title,guessString,\"https://mattbradley96.github.io/sgamble/\"].join(\"\\n\");},[dayString,guesses,hideImageMode,rotationMode,theme]);return/*#__PURE__*/_jsx(CopyToClipboard,{text:shareText,onCopy:function onCopy(){return toast(t(\"copy\"));},options:{format:\"text/plain\"},children:/*#__PURE__*/_jsx(\"button\",{className:\"border-2 px-4 uppercase bg-green-600 hover:bg-green-500 active:bg-green-700 text-white w-full\",children:t(\"share\")})});}","map":{"version":3,"sources":["/home/mb4718/Desktop/sgamble/src/components/Share.tsx"],"names":["DateTime","Interval","useMemo","CopyToClipboard","useTranslation","toast","computeProximityPercent","generateSquareCharacters","getDirectionEmoji","React","START_DATE","fromISO","Share","guesses","dayString","settingsData","hideImageMode","rotationMode","t","theme","shareText","win","length","distance","bestDistance","Math","min","map","guessCount","dayCount","floor","fromDateTimes","difficultyModifierEmoji","bestPercent","toString","title","guessString","guess","percent","squares","join","direction","format"],"mappings":"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","sourcesContent":["import { DateTime, Interval } from \"luxon\";\nimport { useMemo } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport {\n  computeProximityPercent,\n  generateSquareCharacters,\n  getDirectionEmoji,\n} from \"../domain/geography\";\nimport { Guess } from \"../domain/guess\";\nimport React from \"react\";\nimport { SettingsData } from \"../hooks/useSettings\";\n\nconst START_DATE = DateTime.fromISO(\"2022-02-22\");\n\ninterface ShareProps {\n  guesses: Guess[];\n  dayString: string;\n  settingsData: SettingsData;\n  hideImageMode: boolean;\n  rotationMode: boolean;\n}\n\nexport function Share({\n  guesses,\n  dayString,\n  settingsData,\n  hideImageMode,\n  rotationMode,\n}: ShareProps) {\n  const { t } = useTranslation();\n  const { theme } = settingsData;\n\n  const shareText = useMemo(() => {\n    const win = guesses[guesses.length - 1]?.distance === 0;\n    const bestDistance = Math.min(...guesses.map(({ distance }) => distance));\n    const guessCount = win ? guesses.length : \"X\";\n    const dayCount = Math.floor(\n      Interval.fromDateTimes(START_DATE, DateTime.fromISO(dayString)).length(\n        \"day\"\n      )\n    );\n    const difficultyModifierEmoji = hideImageMode\n      ? \" ðŸ™ˆ\"\n      : rotationMode\n      ? \" ðŸŒ€\"\n      : \"\";\n    const bestPercent = `(${computeProximityPercent(\n      bestDistance\n    ).toString()}%)`;\n    const title = `Sgamble ${dayCount} ${guessCount}/6 ${bestPercent}${difficultyModifierEmoji}`;\n\n    const guessString = guesses\n      .map((guess) => {\n        const percent = computeProximityPercent(guess.distance);\n        const squares = generateSquareCharacters(percent, theme).join(\"\");\n        const direction = getDirectionEmoji(guess);\n        return `${squares}${direction}`;\n      })\n      .join(\"\\n\");\n\n    return [title, guessString, \"https://mattbradley96.github.io/sgamble/\"].join(\"\\n\");\n  }, [dayString, guesses, hideImageMode, rotationMode, theme]);\n\n  return (\n    <CopyToClipboard\n      text={shareText}\n      onCopy={() => toast(t(\"copy\"))}\n      options={{\n        format: \"text/plain\",\n      }}\n    >\n      <button className=\"border-2 px-4 uppercase bg-green-600 hover:bg-green-500 active:bg-green-700 text-white w-full\">\n        {t(\"share\")}\n      </button>\n    </CopyToClipboard>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}