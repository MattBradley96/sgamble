{"ast":null,"code":"import _slicedToArray from\"/home/mb4718/Desktop/sgamble/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/home/mb4718/Desktop/sgamble/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useCallback,useState}from\"react\";var defaultSettingsData={noImageMode:false,rotationMode:false,distanceUnit:\"km\",theme:window.matchMedia(\"(prefers-color-scheme: dark)\").matches?\"dark\":\"light\"};function loadSettings(){var storedSettings=localStorage.getItem(\"settings\");var settingsData=storedSettings!=null?JSON.parse(storedSettings):{};return _objectSpread(_objectSpread({},defaultSettingsData),settingsData);}export function useSettings(){var _useState=useState(loadSettings()),_useState2=_slicedToArray(_useState,2),settingsData=_useState2[0],setSettingsData=_useState2[1];var updateSettingsData=useCallback(function(newSettings){var updatedSettings=_objectSpread(_objectSpread({},settingsData),newSettings);setSettingsData(updatedSettings);localStorage.setItem(\"settings\",JSON.stringify(updatedSettings));},[settingsData]);return[settingsData,updateSettingsData];}","map":{"version":3,"sources":["/home/mb4718/Desktop/sgamble/src/hooks/useSettings.ts"],"names":["useCallback","useState","defaultSettingsData","noImageMode","rotationMode","distanceUnit","theme","window","matchMedia","matches","loadSettings","storedSettings","localStorage","getItem","settingsData","JSON","parse","useSettings","setSettingsData","updateSettingsData","newSettings","updatedSettings","setItem","stringify"],"mappings":"mOAAA,OAASA,WAAT,CAAsBC,QAAtB,KAAsC,OAAtC,CASA,GAAMC,CAAAA,mBAAiC,CAAG,CACxCC,WAAW,CAAE,KAD2B,CAExCC,YAAY,CAAE,KAF0B,CAGxCC,YAAY,CAAE,IAH0B,CAIxCC,KAAK,CAAEC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAlD,CACH,MADG,CAEH,OANoC,CAA1C,CASA,QAASC,CAAAA,YAAT,EAAsC,CACpC,GAAMC,CAAAA,cAAc,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAvB,CACA,GAAMC,CAAAA,YAAY,CAAGH,cAAc,EAAI,IAAlB,CAAyBI,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAzB,CAAsD,EAA3E,CACA,sCACKT,mBADL,EAEKY,YAFL,EAID,CAED,MAAO,SAASG,CAAAA,WAAT,EAGL,CACA,cAAwChB,QAAQ,CAC9CS,YAAY,EADkC,CAAhD,wCAAOI,YAAP,eAAqBI,eAArB,eAIA,GAAMC,CAAAA,kBAAkB,CAAGnB,WAAW,CACpC,SAACoB,WAAD,CAAwC,CACtC,GAAMC,CAAAA,eAAe,gCAChBP,YADgB,EAEhBM,WAFgB,CAArB,CAKAF,eAAe,CAACG,eAAD,CAAf,CACAT,YAAY,CAACU,OAAb,CAAqB,UAArB,CAAiCP,IAAI,CAACQ,SAAL,CAAeF,eAAf,CAAjC,EACD,CATmC,CAUpC,CAACP,YAAD,CAVoC,CAAtC,CAaA,MAAO,CAACA,YAAD,CAAeK,kBAAf,CAAP,CACD","sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport interface SettingsData {\n  noImageMode: boolean;\n  rotationMode: boolean;\n  distanceUnit: \"km\" | \"miles\";\n  theme: \"light\" | \"dark\";\n}\n\nconst defaultSettingsData: SettingsData = {\n  noImageMode: false,\n  rotationMode: false,\n  distanceUnit: \"km\",\n  theme: window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ? \"dark\"\n    : \"light\",\n};\n\nfunction loadSettings(): SettingsData {\n  const storedSettings = localStorage.getItem(\"settings\");\n  const settingsData = storedSettings != null ? JSON.parse(storedSettings) : {};\n  return {\n    ...defaultSettingsData,\n    ...settingsData,\n  };\n}\n\nexport function useSettings(): [\n  SettingsData,\n  (newSettings: Partial<SettingsData>) => void\n] {\n  const [settingsData, setSettingsData] = useState<SettingsData>(\n    loadSettings()\n  );\n\n  const updateSettingsData = useCallback(\n    (newSettings: Partial<SettingsData>) => {\n      const updatedSettings = {\n        ...settingsData,\n        ...newSettings,\n      };\n\n      setSettingsData(updatedSettings);\n      localStorage.setItem(\"settings\", JSON.stringify(updatedSettings));\n    },\n    [settingsData]\n  );\n\n  return [settingsData, updateSettingsData];\n}\n"]},"metadata":{},"sourceType":"module"}