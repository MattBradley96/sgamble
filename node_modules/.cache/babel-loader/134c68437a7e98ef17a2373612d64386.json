{"ast":null,"code":"import{useMemo}from\"react\";import seedrandom from\"seedrandom\";export function useCountry(dayString){var country=useMemo(function(){return locations[Math.floor(seedrandom.alea(dayString)()*locations.length)];},[dayString]);var randomAngle=useMemo(function(){return seedrandom.alea(dayString)()*360;},[dayString]);var imageScale=useMemo(function(){var normalizedAngle=45-randomAngle%90;var radianAngle=normalizedAngle*Math.PI/180;return 1/(Math.cos(radianAngle)*Math.sqrt(2));},[randomAngle]);return[country,randomAngle,imageScale];}","map":{"version":3,"sources":["/home/mb4718/Desktop/sgamble/src/hooks/useCountry.ts"],"names":["useMemo","seedrandom","useCountry","dayString","country","locations","Math","floor","alea","length","randomAngle","imageScale","normalizedAngle","radianAngle","PI","cos","sqrt"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAGA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,SAApB,CAAkE,CACvE,GAAMC,CAAAA,OAAO,CAAGJ,OAAO,CAAC,UAAM,CAE5B,MAAQK,CAAAA,SAAS,CAACC,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACO,IAAX,CAAgBL,SAAhB,IAA+BE,SAAS,CAACI,MAApD,CAAD,CAAjB,CAED,CAJsB,CAIpB,CAACN,SAAD,CAJoB,CAAvB,CAMA,GAAMO,CAAAA,WAAW,CAAGV,OAAO,CACzB,iBAAMC,CAAAA,UAAU,CAACO,IAAX,CAAgBL,SAAhB,IAA+B,GAArC,EADyB,CAEzB,CAACA,SAAD,CAFyB,CAA3B,CAKA,GAAMQ,CAAAA,UAAU,CAAGX,OAAO,CAAC,UAAM,CAC/B,GAAMY,CAAAA,eAAe,CAAG,GAAMF,WAAW,CAAG,EAA5C,CACA,GAAMG,CAAAA,WAAW,CAAID,eAAe,CAAGN,IAAI,CAACQ,EAAxB,CAA8B,GAAlD,CACA,MAAO,IAAKR,IAAI,CAACS,GAAL,CAASF,WAAT,EAAwBP,IAAI,CAACU,IAAL,CAAU,CAAV,CAA7B,CAAP,CACD,CAJyB,CAIvB,CAACN,WAAD,CAJuB,CAA1B,CAMA,MAAO,CAACN,OAAD,CAAUM,WAAV,CAAuBC,UAAvB,CAAP,CACD","sourcesContent":["import { useMemo } from \"react\";\nimport seedrandom from \"seedrandom\";\nimport { countries, Country } from \"../domain/locs\";\n\nexport function useCountry(dayString: string): [Country, number, number] {\n  const country = useMemo(() => {\n\n    return (locations[Math.floor(seedrandom.alea(dayString)() * locations.length)]\n    );\n  }, [dayString]);\n\n  const randomAngle = useMemo(\n    () => seedrandom.alea(dayString)() * 360,\n    [dayString]\n  );\n\n  const imageScale = useMemo(() => {\n    const normalizedAngle = 45 - (randomAngle % 90);\n    const radianAngle = (normalizedAngle * Math.PI) / 180;\n    return 1 / (Math.cos(radianAngle) * Math.sqrt(2));\n  }, [randomAngle]);\n\n  return [country, randomAngle, imageScale];\n}\n"]},"metadata":{},"sourceType":"module"}