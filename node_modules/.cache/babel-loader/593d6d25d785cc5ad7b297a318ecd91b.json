{"ast":null,"code":"import _slicedToArray from\"/home/mb4718/Desktop/sgamble/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/home/mb4718/Desktop/sgamble/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React from\"react\";import{useTranslation}from\"react-i18next\";import{formatDistance}from\"../../domain/geography\";import{getStatsData}from\"../../domain/stats\";import{Panel}from\"./Panel\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Stats(_ref){var isOpen=_ref.isOpen,close=_ref.close,distanceUnit=_ref.distanceUnit;var _useTranslation=useTranslation(),t=_useTranslation.t;var _getStatsData=getStatsData(),played=_getStatsData.played,winRatio=_getStatsData.winRatio,currentStreak=_getStatsData.currentStreak,maxStreak=_getStatsData.maxStreak,averageBestDistance=_getStatsData.averageBestDistance,guessDistribution=_getStatsData.guessDistribution;var maxDistribution=Math.max.apply(Math,_toConsumableArray(Object.values(guessDistribution)));return/*#__PURE__*/_jsxs(Panel,{title:t(\"stats.title\"),isOpen:isOpen,close:close,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center\",children:[/*#__PURE__*/_jsx(StatsTile,{value:played,name:t(\"stats.played\")}),/*#__PURE__*/_jsx(StatsTile,{value:Math.round(winRatio*100),name:t(\"stats.win\")}),/*#__PURE__*/_jsx(StatsTile,{value:currentStreak,name:t(\"stats.currentStreak\")}),/*#__PURE__*/_jsx(StatsTile,{value:maxStreak,name:t(\"stats.maxStreak\")})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center m-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col m-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-4xl font-bold text-center\",children:formatDistance(averageBestDistance,distanceUnit)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-center\",children:t(\"stats.averageBestDistance\")})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold\",children:t(\"stats.guessDistribution\")}),/*#__PURE__*/_jsx(\"ul\",{className:\"mx-1\",children:Object.entries(guessDistribution).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),index=_ref3[0],count=_ref3[1];return/*#__PURE__*/_jsxs(\"li\",{className:\"my-2 flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mr-1 font-bold\",children:index}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-slate-400\",style:{flex:\"0 1 \".concat(Math.round(count/maxDistribution*100),\"%\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"px-1 bg-slate-400 font-bold\",children:count})]},index);})})]})]});}function StatsTile(_ref4){var value=_ref4.value,name=_ref4.name;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col m-2 max-w-min\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-center\",children:value}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:name})]});}","map":{"version":3,"sources":["/home/mb4718/Desktop/sgamble/src/components/panels/Stats.tsx"],"names":["React","useTranslation","formatDistance","getStatsData","Panel","Stats","isOpen","close","distanceUnit","t","played","winRatio","currentStreak","maxStreak","averageBestDistance","guessDistribution","maxDistribution","Math","max","Object","values","round","entries","map","index","count","flex","StatsTile","value","name"],"mappings":"4OAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,cAAT,KAA+B,wBAA/B,CACA,OAASC,YAAT,KAA6B,oBAA7B,CACA,OAASC,KAAT,KAAsB,SAAtB,C,wFAQA,MAAO,SAASC,CAAAA,KAAT,MAA4D,IAA3CC,CAAAA,MAA2C,MAA3CA,MAA2C,CAAnCC,KAAmC,MAAnCA,KAAmC,CAA5BC,YAA4B,MAA5BA,YAA4B,CACjE,oBAAcP,cAAc,EAA5B,CAAQQ,CAAR,iBAAQA,CAAR,CACA,kBAOIN,YAAY,EAPhB,CACEO,MADF,eACEA,MADF,CAEEC,QAFF,eAEEA,QAFF,CAGEC,aAHF,eAGEA,aAHF,CAIEC,SAJF,eAIEA,SAJF,CAKEC,mBALF,eAKEA,mBALF,CAMEC,iBANF,eAMEA,iBANF,CASA,GAAMC,CAAAA,eAAe,CAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQE,MAAM,CAACC,MAAP,CAAcL,iBAAd,CAAR,EAA5B,CACA,mBACE,MAAC,KAAD,EAAO,KAAK,CAAEN,CAAC,CAAC,aAAD,CAAf,CAAgC,MAAM,CAAEH,MAAxC,CAAgD,KAAK,CAAEC,KAAvD,wBACE,aAAK,SAAS,CAAC,qBAAf,wBACE,KAAC,SAAD,EAAW,KAAK,CAAEG,MAAlB,CAA0B,IAAI,CAAED,CAAC,CAAC,cAAD,CAAjC,EADF,cAEE,KAAC,SAAD,EAAW,KAAK,CAAEQ,IAAI,CAACI,KAAL,CAAWV,QAAQ,CAAG,GAAtB,CAAlB,CAA8C,IAAI,CAAEF,CAAC,CAAC,WAAD,CAArD,EAFF,cAGE,KAAC,SAAD,EAAW,KAAK,CAAEG,aAAlB,CAAiC,IAAI,CAAEH,CAAC,CAAC,qBAAD,CAAxC,EAHF,cAIE,KAAC,SAAD,EAAW,KAAK,CAAEI,SAAlB,CAA6B,IAAI,CAAEJ,CAAC,CAAC,iBAAD,CAApC,EAJF,GADF,cAOE,YAAK,SAAS,CAAC,yBAAf,uBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,UAAG,SAAS,CAAC,gCAAb,UACGP,cAAc,CAACY,mBAAD,CAAsBN,YAAtB,CADjB,EADF,cAIE,UAAG,SAAS,CAAC,qBAAb,UACGC,CAAC,CAAC,2BAAD,CADJ,EAJF,GADF,EAPF,cAiBE,oCACE,WAAI,SAAS,CAAC,mBAAd,UAAmCA,CAAC,CAAC,yBAAD,CAApC,EADF,cAEE,WAAI,SAAS,CAAC,MAAd,UACGU,MAAM,CAACG,OAAP,CAAeP,iBAAf,EAAkCQ,GAAlC,CAAsC,kDAAEC,KAAF,UAASC,KAAT,6BACrC,YAAgB,SAAS,CAAC,WAA1B,wBACE,YAAK,SAAS,CAAC,gBAAf,UAAiCD,KAAjC,EADF,cAEE,YACE,SAAS,CAAC,cADZ,CAEE,KAAK,CAAE,CACLE,IAAI,eAAST,IAAI,CAACI,KAAL,CAAYI,KAAK,CAAGT,eAAT,CAA4B,GAAvC,CAAT,KADC,CAFT,EAFF,cAQE,YAAK,SAAS,CAAC,6BAAf,UAA8CS,KAA9C,EARF,GAASD,KAAT,CADqC,EAAtC,CADH,EAFF,GAjBF,GADF,CAqCD,CAOD,QAASG,CAAAA,SAAT,OAAoD,IAA/BC,CAAAA,KAA+B,OAA/BA,KAA+B,CAAxBC,IAAwB,OAAxBA,IAAwB,CAClD,mBACE,aAAK,SAAS,CAAC,6BAAf,wBACE,UAAG,SAAS,CAAC,gCAAb,UAA+CD,KAA/C,EADF,cAEE,UAAG,SAAS,CAAC,aAAb,UAA4BC,IAA5B,EAFF,GADF,CAMD","sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { formatDistance } from \"../../domain/geography\";\nimport { getStatsData } from \"../../domain/stats\";\nimport { Panel } from \"./Panel\";\n\ninterface StatsProps {\n  isOpen: boolean;\n  close: () => void;\n  distanceUnit: \"km\" | \"miles\";\n}\n\nexport function Stats({ isOpen, close, distanceUnit }: StatsProps) {\n  const { t } = useTranslation();\n  const {\n    played,\n    winRatio,\n    currentStreak,\n    maxStreak,\n    averageBestDistance,\n    guessDistribution,\n  } = getStatsData();\n\n  const maxDistribution = Math.max(...Object.values(guessDistribution));\n  return (\n    <Panel title={t(\"stats.title\")} isOpen={isOpen} close={close}>\n      <div className=\"flex justify-center\">\n        <StatsTile value={played} name={t(\"stats.played\")} />\n        <StatsTile value={Math.round(winRatio * 100)} name={t(\"stats.win\")} />\n        <StatsTile value={currentStreak} name={t(\"stats.currentStreak\")} />\n        <StatsTile value={maxStreak} name={t(\"stats.maxStreak\")} />\n      </div>\n      <div className=\"flex justify-center m-6\">\n        <div className=\"flex flex-col m-2\">\n          <p className=\"text-4xl font-bold text-center\">\n            {formatDistance(averageBestDistance, distanceUnit)}\n          </p>\n          <p className=\"text-lg text-center\">\n            {t(\"stats.averageBestDistance\")}\n          </p>\n        </div>\n      </div>\n      <div>\n        <h3 className=\"text-xl font-bold\">{t(\"stats.guessDistribution\")}</h3>\n        <ul className=\"mx-1\">\n          {Object.entries(guessDistribution).map(([index, count]) => (\n            <li key={index} className=\"my-2 flex\">\n              <div className=\"mr-1 font-bold\">{index}</div>\n              <div\n                className=\"bg-slate-400\"\n                style={{\n                  flex: `0 1 ${Math.round((count / maxDistribution) * 100)}%`,\n                }}\n              />\n              <div className=\"px-1 bg-slate-400 font-bold\">{count}</div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Panel>\n  );\n}\n\ninterface StatsTileProps {\n  value: number;\n  name: string;\n}\n\nfunction StatsTile({ value, name }: StatsTileProps) {\n  return (\n    <div className=\"flex flex-col m-2 max-w-min\">\n      <p className=\"text-3xl font-bold text-center\">{value}</p>\n      <p className=\"text-center\">{name}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}