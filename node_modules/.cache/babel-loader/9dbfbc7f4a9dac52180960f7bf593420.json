{"ast":null,"code":"var MAX_DISTANCE_ON_EARTH=20000000;var DIRECTION_ARROWS={N:\"‚¨ÜÔ∏è\",NNE:\"‚ÜóÔ∏è\",NE:\"‚ÜóÔ∏è\",ENE:\"‚ÜóÔ∏è\",E:\"‚û°Ô∏è\",ESE:\"‚ÜòÔ∏è\",SE:\"‚ÜòÔ∏è\",SSE:\"‚ÜòÔ∏è\",S:\"‚¨áÔ∏è\",SSW:\"‚ÜôÔ∏è\",SW:\"‚ÜôÔ∏è\",WSW:\"‚ÜôÔ∏è\",W:\"‚¨ÖÔ∏è\",WNW:\"‚ÜñÔ∏è\",NW:\"‚ÜñÔ∏è\",NNW:\"‚ÜñÔ∏è\"};export function getDirectionEmoji(guess){return guess.distance===0?\"üéâ\":DIRECTION_ARROWS[guess.direction];}export function computeProximityPercent(distance){var proximity=Math.max(MAX_DISTANCE_ON_EARTH-distance,0);return Math.round(proximity/MAX_DISTANCE_ON_EARTH*100);}export function generateSquareCharacters(proximity,theme){var characters=new Array(5);var greenSquareCount=Math.floor(proximity/20);var yellowSquareCount=proximity-greenSquareCount*20>=10?1:0;characters.fill(\"üü©\",0,greenSquareCount);characters.fill(\"üü®\",greenSquareCount,greenSquareCount+yellowSquareCount);characters.fill(theme===\"light\"?\"‚¨ú\":\"‚¨õ\",greenSquareCount+yellowSquareCount);return characters;}export function formatDistance(distanceInMeters,distanceUnit){var distanceInKm=distanceInMeters/1000;return distanceUnit===\"km\"?\"\".concat(Math.round(distanceInKm),\"km\"):\"\".concat(Math.round(distanceInKm*0.621371),\"mi\");}","map":{"version":3,"sources":["/home/mb4718/Desktop/sgamble/src/domain/geography.ts"],"names":["MAX_DISTANCE_ON_EARTH","DIRECTION_ARROWS","N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW","getDirectionEmoji","guess","distance","direction","computeProximityPercent","proximity","Math","max","round","generateSquareCharacters","theme","characters","Array","greenSquareCount","floor","yellowSquareCount","fill","formatDistance","distanceInMeters","distanceUnit","distanceInKm"],"mappings":"AAEA,GAAMA,CAAAA,qBAAqB,CAAG,QAA9B,CAoBA,GAAMC,CAAAA,gBAA2C,CAAG,CAClDC,CAAC,CAAE,IAD+C,CAElDC,GAAG,CAAE,IAF6C,CAGlDC,EAAE,CAAE,IAH8C,CAIlDC,GAAG,CAAE,IAJ6C,CAKlDC,CAAC,CAAE,IAL+C,CAMlDC,GAAG,CAAE,IAN6C,CAOlDC,EAAE,CAAE,IAP8C,CAQlDC,GAAG,CAAE,IAR6C,CASlDC,CAAC,CAAE,IAT+C,CAUlDC,GAAG,CAAE,IAV6C,CAWlDC,EAAE,CAAE,IAX8C,CAYlDC,GAAG,CAAE,IAZ6C,CAalDC,CAAC,CAAE,IAb+C,CAclDC,GAAG,CAAE,IAd6C,CAelDC,EAAE,CAAE,IAf8C,CAgBlDC,GAAG,CAAE,IAhB6C,CAApD,CAmBA,MAAO,SAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAyC,CAC9C,MAAOA,CAAAA,KAAK,CAACC,QAAN,GAAmB,CAAnB,CAAuB,IAAvB,CAA8BnB,gBAAgB,CAACkB,KAAK,CAACE,SAAP,CAArD,CACD,CAED,MAAO,SAASC,CAAAA,uBAAT,CAAiCF,QAAjC,CAA2D,CAChE,GAAMG,CAAAA,SAAS,CAAGC,IAAI,CAACC,GAAL,CAASzB,qBAAqB,CAAGoB,QAAjC,CAA2C,CAA3C,CAAlB,CACA,MAAOI,CAAAA,IAAI,CAACE,KAAL,CAAYH,SAAS,CAAGvB,qBAAb,CAAsC,GAAjD,CAAP,CACD,CAED,MAAO,SAAS2B,CAAAA,wBAAT,CACLJ,SADK,CAELK,KAFK,CAGK,CACV,GAAMC,CAAAA,UAAU,CAAG,GAAIC,CAAAA,KAAJ,CAAkB,CAAlB,CAAnB,CACA,GAAMC,CAAAA,gBAAgB,CAAGP,IAAI,CAACQ,KAAL,CAAWT,SAAS,CAAG,EAAvB,CAAzB,CACA,GAAMU,CAAAA,iBAAiB,CAAGV,SAAS,CAAGQ,gBAAgB,CAAG,EAA/B,EAAqC,EAArC,CAA0C,CAA1C,CAA8C,CAAxE,CAEAF,UAAU,CAACK,IAAX,CAAgB,IAAhB,CAAsB,CAAtB,CAAyBH,gBAAzB,EACAF,UAAU,CAACK,IAAX,CAAgB,IAAhB,CAAsBH,gBAAtB,CAAwCA,gBAAgB,CAAGE,iBAA3D,EACAJ,UAAU,CAACK,IAAX,CACEN,KAAK,GAAK,OAAV,CAAoB,GAApB,CAA0B,GAD5B,CAEEG,gBAAgB,CAAGE,iBAFrB,EAKA,MAAOJ,CAAAA,UAAP,CACD,CAED,MAAO,SAASM,CAAAA,cAAT,CACLC,gBADK,CAELC,YAFK,CAGL,CACA,GAAMC,CAAAA,YAAY,CAAGF,gBAAgB,CAAG,IAAxC,CAEA,MAAOC,CAAAA,YAAY,GAAK,IAAjB,WACAb,IAAI,CAACE,KAAL,CAAWY,YAAX,CADA,iBAEAd,IAAI,CAACE,KAAL,CAAWY,YAAY,CAAG,QAA1B,CAFA,MAAP,CAGD","sourcesContent":["import { Guess } from \"./guess\";\n\nconst MAX_DISTANCE_ON_EARTH = 20_000_000;\n\nexport type Direction =\n  | \"S\"\n  | \"W\"\n  | \"NNE\"\n  | \"NE\"\n  | \"ENE\"\n  | \"E\"\n  | \"ESE\"\n  | \"SE\"\n  | \"SSE\"\n  | \"SSW\"\n  | \"SW\"\n  | \"WSW\"\n  | \"WNW\"\n  | \"NW\"\n  | \"NNW\"\n  | \"N\";\n\nconst DIRECTION_ARROWS: Record<Direction, string> = {\n  N: \"‚¨ÜÔ∏è\",\n  NNE: \"‚ÜóÔ∏è\",\n  NE: \"‚ÜóÔ∏è\",\n  ENE: \"‚ÜóÔ∏è\",\n  E: \"‚û°Ô∏è\",\n  ESE: \"‚ÜòÔ∏è\",\n  SE: \"‚ÜòÔ∏è\",\n  SSE: \"‚ÜòÔ∏è\",\n  S: \"‚¨áÔ∏è\",\n  SSW: \"‚ÜôÔ∏è\",\n  SW: \"‚ÜôÔ∏è\",\n  WSW: \"‚ÜôÔ∏è\",\n  W: \"‚¨ÖÔ∏è\",\n  WNW: \"‚ÜñÔ∏è\",\n  NW: \"‚ÜñÔ∏è\",\n  NNW: \"‚ÜñÔ∏è\",\n};\n\nexport function getDirectionEmoji(guess: Guess) {\n  return guess.distance === 0 ? \"üéâ\" : DIRECTION_ARROWS[guess.direction];\n}\n\nexport function computeProximityPercent(distance: number): number {\n  const proximity = Math.max(MAX_DISTANCE_ON_EARTH - distance, 0);\n  return Math.round((proximity / MAX_DISTANCE_ON_EARTH) * 100);\n}\n\nexport function generateSquareCharacters(\n  proximity: number,\n  theme: \"light\" | \"dark\"\n): string[] {\n  const characters = new Array<string>(5);\n  const greenSquareCount = Math.floor(proximity / 20);\n  const yellowSquareCount = proximity - greenSquareCount * 20 >= 10 ? 1 : 0;\n\n  characters.fill(\"üü©\", 0, greenSquareCount);\n  characters.fill(\"üü®\", greenSquareCount, greenSquareCount + yellowSquareCount);\n  characters.fill(\n    theme === \"light\" ? \"‚¨ú\" : \"‚¨õ\",\n    greenSquareCount + yellowSquareCount\n  );\n\n  return characters;\n}\n\nexport function formatDistance(\n  distanceInMeters: number,\n  distanceUnit: \"km\" | \"miles\"\n) {\n  const distanceInKm = distanceInMeters / 1000;\n\n  return distanceUnit === \"km\"\n    ? `${Math.round(distanceInKm)}km`\n    : `${Math.round(distanceInKm * 0.621371)}mi`;\n}\n"]},"metadata":{},"sourceType":"module"}