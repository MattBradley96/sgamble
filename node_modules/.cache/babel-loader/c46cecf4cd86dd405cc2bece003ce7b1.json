{"ast":null,"code":"var countryCodesWithImage=[\"EMM\",\"NOV\"];export var countries=[{name:\"Emmanuel\",latitude:52.204138,longitude:0.125198},{name:\"Novi\",latitude:52.201998,longitude:0.124688}];export function getCountryName(language,country){if(language===\"fr\"){return frenchCountryNames[country.code];}return country.name;}export function sanitizeCountryName(countryName){return countryName.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\").replace(/[- '()]/g,\"\").toLowerCase();}","map":{"version":3,"sources":["/home/mb4718/Desktop/sgamble/src/domain/locs.ts"],"names":["countryCodesWithImage","countries","name","latitude","longitude","getCountryName","language","country","frenchCountryNames","code","sanitizeCountryName","countryName","normalize","replace","toLowerCase"],"mappings":"AAAA,GAAMA,CAAAA,qBAAqB,CAAG,CAC9B,KAD8B,CAE9B,KAF8B,CAA9B,CAcA,MAAO,IAAMC,CAAAA,SAAoB,CAAG,CACpC,CAACC,IAAI,CAAE,UAAP,CAAmBC,QAAQ,CAAE,SAA7B,CAAwCC,SAAS,CAAE,QAAnD,CADoC,CAEpC,CAACF,IAAI,CAAE,MAAP,CAAeC,QAAQ,CAAE,SAAzB,CAAoCC,SAAS,CAAE,QAA/C,CAFoC,CAA7B,CAKP,MAAO,SAASC,CAAAA,cAAT,CAAwBC,QAAxB,CAA0CC,OAA1C,CAA4D,CACjE,GAAID,QAAQ,GAAK,IAAjB,CAAuB,CACrB,MAAOE,CAAAA,kBAAkB,CAACD,OAAO,CAACE,IAAT,CAAzB,CACD,CACD,MAAOF,CAAAA,OAAO,CAACL,IAAf,CACD,CAED,MAAO,SAASQ,CAAAA,mBAAT,CAA6BC,WAA7B,CAA0D,CAC/D,MAAOA,CAAAA,WAAW,CACfC,SADI,CACM,KADN,EAEJC,OAFI,CAEI,kBAFJ,CAEwB,EAFxB,EAGJA,OAHI,CAGI,UAHJ,CAGgB,EAHhB,EAIJC,WAJI,EAAP,CAKD","sourcesContent":["const countryCodesWithImage = [\n\"EMM\",\n\"NOV\"\n];\n\nexport interface Country {\n  code: string;\n  name: string;\n  latitude: number;\n  longitude: number;\n\n}\n\n\nexport const countries: Country[] = [\n{name: \"Emmanuel\", latitude: 52.204138, longitude: 0.125198},\n{name: \"Novi\", latitude: 52.201998, longitude: 0.124688},\n];\n\nexport function getCountryName(language: string, country: Country) {\n  if (language === \"fr\") {\n    return frenchCountryNames[country.code];\n  }\n  return country.name;\n}\n\nexport function sanitizeCountryName(countryName: string): string {\n  return countryName\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .replace(/[- '()]/g, \"\")\n    .toLowerCase();\n}\n"]},"metadata":{},"sourceType":"module"}